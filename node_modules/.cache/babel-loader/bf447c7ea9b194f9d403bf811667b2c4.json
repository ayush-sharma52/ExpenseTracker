{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\react.js\\\\01-starting-setup\\\\src\\\\components\\\\Expense\\\\ExpensesChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseChart(props) {\n  const ChartDataPoints = [{\n    month: \"january\",\n    value: 0\n  }, {\n    month: \"February\",\n    value: 0\n  }, {\n    month: \"March\",\n    value: 0\n  }, {\n    month: \"April\",\n    value: 0\n  }, {\n    month: \"May\",\n    value: 0\n  }, {\n    month: \"June\",\n    value: 0\n  }, {\n    month: \"July\",\n    value: 0\n  }, {\n    month: \"August\",\n    value: 0\n  }, {\n    month: \"September\",\n    value: 0\n  }, {\n    month: \"October\",\n    value: 0\n  }, {\n    month: \"November\",\n    value: 0\n  }, {\n    month: \"December\",\n    value: 0\n  }];\n\n  for (const expense of props.items) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n\n    ChartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartItems: ChartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["Chart","ExpenseChart","props","ChartDataPoints","month","value","expense","items","expenseMonth","date","getMonth","amount"],"sources":["D:/web/react.js/01-starting-setup/src/components/Expense/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpenseChart(props) {\r\n  const ChartDataPoints = [\r\n    { month: \"january\", value: 0 },\r\n    { month: \"February\", value: 0 },\r\n    { month: \"March\", value: 0 },\r\n    { month: \"April\", value: 0 },\r\n    { month: \"May\", value: 0 },\r\n    { month: \"June\", value: 0 },\r\n    { month: \"July\", value: 0 },\r\n    { month: \"August\", value: 0 },\r\n    { month: \"September\", value: 0 },\r\n    { month: \"October\", value: 0 },\r\n    { month: \"November\", value: 0 },\r\n    { month: \"December\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.items) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    ChartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart chartItems={ChartDataPoints} />;\r\n}\r\nexport default ExpenseChart;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAC3B,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,SAAT;IAAoBC,KAAK,EAAE;EAA3B,CADsB,EAEtB;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAFsB,EAGtB;IAAED,KAAK,EAAE,OAAT;IAAkBC,KAAK,EAAE;EAAzB,CAHsB,EAItB;IAAED,KAAK,EAAE,OAAT;IAAkBC,KAAK,EAAE;EAAzB,CAJsB,EAKtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALsB,EAMtB;IAAED,KAAK,EAAE,MAAT;IAAiBC,KAAK,EAAE;EAAxB,CANsB,EAOtB;IAAED,KAAK,EAAE,MAAT;IAAiBC,KAAK,EAAE;EAAxB,CAPsB,EAQtB;IAAED,KAAK,EAAE,QAAT;IAAmBC,KAAK,EAAE;EAA1B,CARsB,EAStB;IAAED,KAAK,EAAE,WAAT;IAAsBC,KAAK,EAAE;EAA7B,CATsB,EAUtB;IAAED,KAAK,EAAE,SAAT;IAAoBC,KAAK,EAAE;EAA3B,CAVsB,EAWtB;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAXsB,EAYtB;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAZsB,CAAxB;;EAeA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,KAA5B,EAAmC;IACjC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB,CADiC,CACa;;IAC9CP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAuCC,OAAO,CAACK,MAA/C;EACD;;EAED,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAER;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAtBQF,Y;AAuBT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}